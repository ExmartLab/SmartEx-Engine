- name: "rule 1 (coffee)"
  ruleId: "1"
  triggers:
  - entity_id: efwf
    state:
  - entity_id
  

String idAlice = dataSer.findUserByName("Alice").getUserId();
		String idBob = dataSer.findUserByName("Bob").getUserId();
		String idNoOwner = "0";

		ArrayList<LogEntry> triggers;
		ArrayList<String> conditions;
		ArrayList<LogEntry> actions;
		
		
		
		triggers = new ArrayList<LogEntry>();
		triggers.add(demoEntries.get(3));
		actions = new ArrayList<LogEntry>();
		actions.add(demoEntries.get(5));
		conditions = new ArrayList<String>();
		conditions.add("daily energy consumption is higher than the threshold");
		dataSer.saveNewRule(new Rule("rule 1 (coffee)", "1", demoEntries.get(4), triggers, conditions, actions, idAlice,
				"Rule_1: allows coffee to be made only until the daily energy consumption threshold is reached"));

		// initiateDemoEntries(2);
		triggers = new ArrayList<LogEntry>();
		triggers.add(demoEntries.get(7));
		actions = new ArrayList<LogEntry>();
		actions.add(demoEntries.get(9));
		conditions = new ArrayList<String>();
		conditions.add("a meeting in room 1 is going on");
//		actions.add("tv_mute null");

		dataSer.saveNewRule(new Rule("rule 2 (tv mute)", "2", demoEntries.get(8), triggers, conditions, actions, idBob,
				"Rule_2: mutes the TV if TV is playing while a meeting is going on"));

		// initiateDemoEntries(5);
		actions = new ArrayList<LogEntry>();
		actions.add(demoEntries.get(2));
		dataSer.saveNewError(new Error("Deebot error", "e1", actions, "the robotic vacuum cleaner is stuck",
				"remove barrier or set robot back on track"));